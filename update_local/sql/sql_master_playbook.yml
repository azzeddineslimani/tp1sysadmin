---
- hosts: node3
  become: true
  vars_files:
    - vars/default.yml

  tasks:
    - name: Install prerequisites
      apt: name={{ item }} update_cache=yes state=latest force_apt_get=yes
      loop: [ 'aptitude' ]


    - name: Install Mysql Packages
      apt: name={{ item }} update_cache=yes state=latest
      loop: [ 'mysql-server' ]

  # MySQL Configuration
    - name: Sets the root password
      mysql_user:
        name: root
        password: "{{ mysql_root_password }}"
        login_unix_socket: /var/run/mysqld/mysqld.sock

    - name: Removes all anonymous user accounts
      mysql_user:
        name: ''
        host_all: yes
        state: absent
        login_user: root
        login_password: "{{ mysql_root_password }}"

    - name: Removes the MySQL test database
      mysql_db:
        name: test
        state: absent
        login_user: root
        login_password: "{{ mysql_root_password }}"
    - name: Swap/ edit lines in config
      lineinfile:
        dest: /etc/mysql/mysql.conf.d/mysqld.cnf
        line: 'bind-address            = 192.168.148.11' #new text
        regexp: 'bind-address            = 127.0.0.1' #old text
    - name: Add a line to a file if the file does not exist, without passing regexp
      ansible.builtin.lineinfile:
        path: /etc/mysql/mysql.conf.d/mysqld.cnf
        line: server-id              =1
        create: yes
    - name: Add a line to a file if the file does not exist, without passing regexp
      ansible.builtin.lineinfile:
        path: /etc/mysql/mysql.conf.d/mysqld.cnf
        line: server-id              =1
        create: yes
    - name: Add a line to a file if the file does not exist, without passing regexp
      ansible.builtin.lineinfile:
        path: /etc/mysql/mysql.conf.d/mysqld.cnf
        line: log_bin = /var/log/mysql/mysql-bin.log
        create: yes
#    - name: Swap/ edit lines in config
#      lineinfile:
#        dest: /etc/mysql/mysql.conf.d/mysqld.cnf
#        line: 'log_bin = /var/log/mysql/mysql-bin.log' #new text
#        regexp: '# * Fine Tuning' #old text

    - name: Start service
      ansible.builtin.service:
          name: rsyslog
          state: restarted
    - name: Create database user with name 'bob' and password '12345' with all database privileges
      community.mysql.mysql_user:
          name: node1
          password: "{{ mysql_root_password }}"
          priv: '*.*:ALL'
          state: present
    - name: Specify grants composed of more than one word
      community.mysql.mysql_user:
          name: node1
          password: "{{ mysql_root_password }}"
          priv: "*.*:REPLICATION SLAVE"
          state: present
    - name: Copy database dump file
      copy:
      src: dump.sql.bz2
      dest: /tmp/sql_master