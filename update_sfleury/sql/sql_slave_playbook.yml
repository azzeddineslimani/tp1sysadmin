---
- hosts: node4
  become: true
  vars_files:
    - vars/default.yml

  tasks:
    - name: Install prerequisites
      apt: name={{ item }} update_cache=yes state=latest force_apt_get=yes
      loop: [ 'aptitude' ]


    - name: Install Mysql Packages
      apt: name={{ item }} update_cache=yes state=latest
      loop: [ 'mysql-server', 'python3-pymysql', 'php', 'php-mysql' ]

  # MySQL Configuration
#    - name: Sets the root password
 #     mysql_user:
  #      name: root
   #     password: "{{ mysql_root_password }}"
    #    login_unix_socket: /var/run/mysqld/mysqld.sock

    - name: Removes all anonymous user accounts
      mysql_user:
        name: ''
        host_all: yes
        state: absent
        login_user: root
        login_password: "{{ mysql_root_password }}"

    - name: Removes the MySQL test database
      mysql_db:
        name: test
        state: absent
        login_user: root
        login_password: "{{ mysql_root_password }}"
    - name: Swap/ edit lines in config
      lineinfile:
        dest: /etc/mysql/mysql.conf.d/mysqld.cnf
        line: 'bind-address            = 192.168.148.12' #new text
        regexp: 'bind-address            = 127.0.0.1' #old text
    - name: Add a line to a file if the file does not exist, without passing regexp
      ansible.builtin.lineinfile:
        path: /etc/mysql/mysql.conf.d/mysqld.cnf
        line: server-id              =2
        create: yes
    - name: Start service
      ansible.builtin.service:
          name: mysql-server
          state: restarted
    - name: cat
      shell:
       mysql -u root -p
       "{{ mysql_root_password }}"
       CHANGE MASTER TO
       MASTER_HOST='192.168.148.11',
       MASTER_USER='root',
       MASTER_PASSWORD="{{ mysql_root_password }}";
       exit
    - name: Restore the snapshot:
      shell:
       mysql -uroot < masterdump.sql
    - name: cat
      shell:
       mysql -u root
       start slave;
       show slave status\G;
